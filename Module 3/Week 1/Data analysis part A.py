# -*- coding: utf-8 -*-
"""Data anylyst.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hWyLsgVEHrXsek6V1h5lewqXX856ipGf
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

dataset_path = '/content/IMDB-Movie-Data.csv'
data = pd.read_csv(dataset_path)

data.head()

data.info()
data.describe()

genre = data['Genre']
genre

title_genre_df = data[['Title', 'Genre']]

sliced_data = data.iloc[10:15][['Title', 'Rating', 'Revenue (Millions)']]

filtered_data = data[
    (data['Year'] >= 2010) &
    (data['Year'] <= 2015) &
    (data['Rating'] < 6.0) &
    (data['Revenue (Millions)'] > data['Revenue (Millions)'].quantile(0.95))
]
filtered_data.head()

avg_ratings_by_director = data.groupby('Director')[['Rating']].mean().sort_values(by='Rating', ascending=False).head()
avg_ratings_by_director

data.isnull().sum()
revenue_mean = data['Revenue (Millions)'].mean()
data['Revenue (Millions)'].fillna(revenue_mean, inplace=True)

def rating_group(rating):
    if rating >= 7.5:
        return 'Good'
    elif rating >= 6.0:
        return 'Average'
    else:
        return 'Bad'
data['Rating_category'] = data['Rating'].apply(rating_group)
data[['Title', 'Rating', 'Rating_category']].head()

plt.hist(data['Rating'], bins=20)
plt.xlabel('Rating')
plt.ylabel('Frequency')
plt.title('Distribution of Movie Ratings')
plt.show()